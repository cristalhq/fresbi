name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # test-core:
  #   name: Core
  #   env:
  #     ELASTICSEARCH_VERSION: elasticsearch-oss:8.0.0-SNAPSHOT
  #     ELASTICSEARCH_URL: http://localhost:9200
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #       with: { fetch-depth: 1 }
  #     - name: Set up Go 1.x
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: ^1.15
  #     # - name: Increase system limits
  #     #   run: |
  #     #     sudo swapoff -a
  #     #     sudo sysctl -w vm.swappiness=1
  #     #     sudo sysctl -w fs.file-max=262144
  #     #     sudo sysctl -w vm.max_map_count=262144
  #     # - name: Launch Elasticsearch
  #     #   run: |
  #     #     docker pull --quiet docker.elastic.co/elasticsearch/${{ env.ELASTICSEARCH_VERSION }}
  #     #     docker pull --quiet appropriate/curl
  #     #     make cluster-clean cluster-update cluster detach=true version="${{ env.ELASTICSEARCH_VERSION }}"
  #     - name: Run Docker containers
  #       run: docker-compose up -d
  #     - name: Check Docker containers
  #       run: docker ps -a
  #     - name: Wait for Elasticsearch
  #       run: |
  #         while ! nc -z localhost 9200; do sleep 1; done
  #         # while ! nc -z localhost 9210; do sleep 1; done

  #     - run: go test -v ./...
  #     # - uses: codecov/codecov-action@v1
  #     #   with:
  #     #     file: tmp/integration-client.cov
  #     #     flags: integration
  #     # - name: Download Elasticsearch source
  #     #   run: |
  #     #     curl -s ${{ env.ELASTICSEARCH_URL }} | jq -r '.version.build_hash' > elasticsearch_build_hash && cat elasticsearch_build_hash
  #     #     curl -sSL --retry 3 -o elasticsearch-$(cat elasticsearch_build_hash).zip https://github.com/elastic/elasticsearch/archive/$(cat elasticsearch_build_hash).zip && \
  #     #       unzip -q -o elasticsearch-$(cat elasticsearch_build_hash).zip '*.properties' '*.json' '*.yml' -d tmp && \
  #     #       mv tmp/elasticsearch-$(cat elasticsearch_build_hash)* tmp/elasticsearch
  #     # - run: ELASTICSEARCH_BUILD_HASH=$(cat elasticsearch_build_hash) make gen-tests
  #     # - run: make test-api

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Download module dependencies
      env: 
         GOPROXY: "https://proxy.golang.org"
      run: go mod download

    - name: Test
      run: go test -v -coverprofile=coverage.txt ./...

    - name: Upload Coverage
      uses: codecov/codecov-action@v1
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        file: ./coverage.txt
        fail_ci_if_error: false
